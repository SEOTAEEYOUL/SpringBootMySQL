---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: springmysql
  namespace: homeeee
  labels:
    app: springmysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: springmysql
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: springmysql
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: role
                operator: In
                values:
                - worker
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - springmysql
              topologyKey: failure-domain.beta.kubernetes.io/zone
            weight: 100
      hostAliases:
        - hostnames:
          - "aurora-instance-skcc-07456-p-an2-0.cgxth7zggvw1.ap-northeast-2.rds.amazonaws.com"
          ip: "10.0.22.183"
          
      containers:
        - name: springmysql
          # image: acrHomeeee.azurecr.io/springmysql:0.2.1
          # image: acrHomeeee.azurecr.io/springmysql:latest
          # image: 520666629845.dkr.ecr.ap-northeast-2.amazonaws.com/springmysql:0.1.0
          # image: 864563395693.dkr.ecr.ap-northeast-2.amazonaws.com/springmysql:1.0.0
          image: 864563395693.dkr.ecr.ap-northeast-2.amazonaws.com/springmysql:1.1.7
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          resources:
            requests:
              cpu: 250m
              # cpu: 100m
              memory: 256Mi
              # memory: 2048Mi
            limits:
              cpu: 500m
              # cpu: 100m
              memory: 1024Mi
              # memory: 2048Mi
          env:
            - name: TITLE
              value: "EKS Ingress Demo"
          volumeMounts:
            - mountPath: /data01
              name: persistent-storage-1
            # - mountPath: /data02
            #   name: persistent-storage-2
        # - name: cat-hosts
        #   image: busybox:1.28
        #   command:
        #   - cat
        #   args:
        #   - "/etc/hosts"
      volumes:
        - name: persistent-storage-1
          persistentVolumeClaim:
            claimName: springmysql-pvc
        # ec2 와 pod 간 공유
        # - name: persistent-storage-2
        #   persistentVolumeClaim:
        #     claimName: efs-sc-pvc